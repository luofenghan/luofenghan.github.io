{"meta":{"title":"落枫寒博客","subtitle":null,"description":null,"author":"落枫寒","url":"http://vibrancy.cn"},"pages":[{"title":"关于","date":"2017-01-16T15:24:04.000Z","updated":"2017-01-16T15:24:29.826Z","comments":true,"path":"about/index.html","permalink":"http://vibrancy.cn/about/index.html","excerpt":"","text":""},{"title":"分类","date":"2017-01-16T15:21:44.000Z","updated":"2017-01-16T15:22:19.052Z","comments":true,"path":"categories/index.html","permalink":"http://vibrancy.cn/categories/index.html","excerpt":"","text":""},{"title":"文章","date":"2017-01-16T15:31:12.000Z","updated":"2017-04-29T02:19:33.383Z","comments":true,"path":"archives/index.html","permalink":"http://vibrancy.cn/archives/index.html","excerpt":"","text":""},{"title":"标签","date":"2017-01-16T15:22:46.000Z","updated":"2017-01-16T15:23:17.675Z","comments":true,"path":"tags/index.html","permalink":"http://vibrancy.cn/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Tomcat多实例单应用部署方案","slug":"Tomcat多实例单应用部署方案","date":"2017-04-29T02:20:53.000Z","updated":"2017-04-29T03:02:49.134Z","comments":true,"path":"2017/04/29/Tomcat多实例单应用部署方案/","link":"","permalink":"http://vibrancy.cn/2017/04/29/Tomcat多实例单应用部署方案/","excerpt":"","text":"Tomcat部署的场景分析tomcat部署需求可以分为 单实例单应用 如果不要求周期性地维护tomcat版本，一般的做法是把打好的war包丢到webapps目录下，然后执行startup.sh脚本，并且可以在浏览器里访问就行了。 单实例多应用 是把多个应用程序的war包放在同一个tomcat的webapps目录，这样一来，关闭和启动tomcat会影响所有项目。 多实例单应用 各个tomcat都运行同一个应用程序，对应地需要修改不同的监听端口，这种方式通常会和apache httpd或者nginx整合使用，做一些负载均衡的处理。 多实例多应用 相当于第一种场景的复数形式，除了修改不同的监听端口，没有本质区别。 Windows服务器下多实例单应用设置流程分离目录 刚解压出来的tomcat目录结构 bin：主要存放脚本文件，例如比较常用的windows和linux系统中启动和关闭脚本 conf：主要存放配置文件，其中最重要的两个配置文件是server.xml和web.xml lib：主要存放tomcat运行所依赖的包 logs：主要存放运行时产生的日志文件，例如catalina.{date}.log等 temp：存放tomcat运行时产生的临时文件，例如开启了hibernate缓存的应用程序，会在该目录下生成一些文件 webapps：部署web应用程序的默认目录 work：主要存放由JSP文件生成的servlet（java文件以及最终编译生成的class文件） 将解压出来的tomcat文件拆分出的目录结构如下所示： 1234567891011121314151617181920F:/DevLibs/Tomcat├─applications│ ├─backend # 主要部署后端模块代码│ │ │ shutdown.bat│ │ │ startup.bat│ │ ├─conf│ │ ├─logs│ │ ├─temp│ │ ├─webapps │ │ └─work│ └─officals-website # 主要部署前端代码，如官方网站│ │ shutdown.bat│ │ startup.bat│ ├─conf│ ├─logs│ ├─temp│ ├─webapps│ └─work├─bin└─lib 修改环境变量 环境变量说明 CATALINA_HOME：即指向Tomcat安装路径的系统变量 CATALINA_BASE：即指向活跃配置路径的系统变量 通过设置这两个变量，就可以将tomcat的安装目录和工作目录分离，从而实现tomcat多实例的部署。 环境变量设置 新建变量名：CATALINA_HOME，变量值：F:/DevLibs/Tomcat 不需要增加CATALINA_BASE，该变量在脚本中动态设置。 打开PATH，添加变量值：%CATALINA_HOME%\\lib;%CATALINA_HOME%\\bin 修改server.xml 修改官方网站（officals-website）web应用的server.xml配置（端口号8081）。 将第22行的&lt;Server port=&quot;8005&quot; shutdown=&quot;SHUTDOWN&quot;&gt; 修改为 &lt;Server port=&quot;8015&quot; shutdown=&quot;SHUTDOWN&quot;&gt; 将第69行的&lt;Connector port=&quot;8080&quot; protocol=&quot;HTTP/1.1&quot; 修改为 &lt;Connector port=&quot;8081&quot; protocol=&quot;HTTP/1.1&quot; 将第91行的&lt;Connector port=&quot;8009&quot; protocol=&quot;AJP/1.3&quot; redirectPort=&quot;8443&quot; /&gt;修改为&lt;Connector port=&quot;8019&quot; protocol=&quot;AJP/1.3&quot; redirectPort=&quot;8443&quot; /&gt; 将第123行的&lt;Host name=&quot;localhost&quot; appBase=&quot;webapps&quot; unpackWARs=&quot;true&quot; autoDeploy=&quot;true&quot;&gt;修改为&lt;Host name=&quot;localhost&quot; appBase=&quot;webapps&quot; unpackWARs=&quot;true&quot; autoDeploy=&quot;false&quot;&gt; 修改后端（backend）web应用的server.xml配置（端口号8082）。 将第22行的&lt;Server port=&quot;8005&quot; shutdown=&quot;SHUTDOWN&quot;&gt; 修改为 &lt;Server port=&quot;8025&quot; shutdown=&quot;SHUTDOWN&quot;&gt; 将第69行的&lt;Connector port=&quot;8080&quot; protocol=&quot;HTTP/1.1&quot; 修改为 &lt;Connector port=&quot;8082&quot; protocol=&quot;HTTP/1.1&quot; 将第91行的&lt;Connector port=&quot;8009&quot; protocol=&quot;AJP/1.3&quot; redirectPort=&quot;8443&quot; /&gt;修改为&lt;Connector port=&quot;8029&quot; protocol=&quot;AJP/1.3&quot; redirectPort=&quot;8443&quot; /&gt; 将第123行的&lt;Host name=&quot;localhost&quot; appBase=&quot;webapps&quot; unpackWARs=&quot;true&quot; autoDeploy=&quot;true&quot;&gt;修改为&lt;Host name=&quot;localhost&quot; appBase=&quot;webapps&quot; unpackWARs=&quot;true&quot; autoDeploy=&quot;false&quot;&gt; 修改启动和停止脚本 将初始tomcat的bin目录下的startup.bat 和shutdown.bat 这两个脚本分别拷贝到backend 和 offical-website 目录下 编辑startup.bat脚本，增加一行语句，用于设置CATALINA_BASE变量。（backend和offical-website需要同时修改） 1234567891011121314setlocalrem Guess CATALINA_HOME if not definedset &quot;CURRENT_DIR=%cd%&quot;## 在这里将CATALINA_BASE 设置为脚本所在目录set &quot;CATALINA_BASE=%cd%&quot; if not &quot;%CATALINA_HOME%&quot; == &quot;&quot; goto gotHomeset &quot;CATALINA_HOME=%CURRENT_DIR%&quot;if exist &quot;%CATALINA_HOME%\\bin\\catalina.bat&quot; goto okHomecd ..set &quot;CATALINA_HOME=%cd%&quot;cd &quot;%CURRENT_DIR%&quot;:gotHome 编辑shutdown.bat脚本，增加一行语句，用于设置CATALINA_BASE变量。（backend和offical-website需要同时修改） 12345678910111213setlocalrem Guess CATALINA_HOME if not definedset &quot;CURRENT_DIR=%cd%&quot;## 在这里将CATALINA_BASE 设置为脚本所在目录set &quot;CATALINA_BASE=%cd%&quot;if not &quot;%CATALINA_HOME%&quot; == &quot;&quot; goto gotHomeset &quot;CATALINA_HOME=%CURRENT_DIR%&quot;if exist &quot;%CATALINA_HOME%\\bin\\catalina.bat&quot; goto okHomecd ..set &quot;CATALINA_HOME=%cd%&quot;cd &quot;%CURRENT_DIR%&quot;:gotHome 启动tomcats 分别在backend和officals-website目录，用Dos执行startup.bat脚本。 在浏览器输入loalhost:8081和loalhost:8082就可以访问tomcat管理页面了。 参考文章 Tomcat多实例单应用部署方案 一个tomcat部署多个应用实例总结","categories":[{"name":"Tomcat","slug":"Tomcat","permalink":"http://vibrancy.cn/categories/Tomcat/"}],"tags":[{"name":"tomcat","slug":"tomcat","permalink":"http://vibrancy.cn/tags/tomcat/"}]}]}